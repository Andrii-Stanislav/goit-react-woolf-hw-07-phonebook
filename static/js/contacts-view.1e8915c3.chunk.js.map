{"version":3,"file":"static/js/contacts-view.1e8915c3.chunk.js","mappings":"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","sources":["components/PhoneMaskInput/PhoneMaskInput.tsx","components/ContactForm/ContactForm.tsx","components/EdtiContactForm/EdtiContactForm.tsx","components/EditModal/EditModal.tsx","components/Contact/Contact.tsx","components/ContactList/ContactList.tsx","components/Filter/Filter.tsx","pages/Contacts.tsx"],"sourcesContent":["import * as React from 'react';\nimport { IMaskInput } from 'react-imask';\n\ninterface CustomProps {\n  onChange: (event: { target: { name: string; value: string } }) => void;\n  name: string;\n}\n\nexport default React.forwardRef<HTMLElement, CustomProps>(\n  function TextMaskCustom(props, ref) {\n    const { onChange, ...other } = props;\n    return (\n      <IMaskInput\n        {...other}\n        mask=\"(+000)-000-0000\"\n        definitions={{\n          '#': /[1-9]/,\n        }}\n        // @ts-ignore\n        inputRef={ref}\n        onAccept={(value: any) =>\n          onChange({ target: { name: props.name, value } })\n        }\n        overwrite\n      />\n    );\n  },\n);\n","import { FormEvent, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, TextField, Stack } from '@mui/material';\n\nimport { PhoneMaskInput } from '../PhoneMaskInput';\nimport { getContacts } from '../../redux/selectors';\nimport { createContact } from '../../redux/operations/contacts';\nimport type * as TYPES from '../../types';\n\nexport function ContactForm() {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const verifyNewContact = ({\n    name: newName,\n    phone: newNumber,\n  }: TYPES.NewContact) => {\n    let verify = true;\n    contacts.forEach(({ name, phone }: TYPES.NewContact) => {\n      if (name.toLowerCase() === newName.toLowerCase() || newNumber === phone) {\n        verify = false;\n      }\n    });\n\n    return verify;\n  };\n\n  const createNewContact = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (verifyNewContact({ name, phone })) {\n      dispatch(createContact({ name, phone }));\n      setName('');\n      setPhone('');\n    }\n  };\n\n  return (\n    <form onSubmit={createNewContact}>\n      <Stack spacing={1}>\n        <TextField\n          label=\"Name\"\n          placeholder=\"Awesome name\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n          required\n        />\n\n        <TextField\n          label=\"Phone 1234567890\"\n          placeholder=\"Cool phone number\"\n          value={phone}\n          onChange={e => setPhone(e.target.value)}\n          InputProps={{\n            inputComponent: PhoneMaskInput as any,\n          }}\n          required\n        />\n\n        <Button variant=\"contained\" type=\"submit\">\n          Create contact\n        </Button>\n      </Stack>\n    </form>\n  );\n}\n","import { SyntheticEvent, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { PhoneMaskInput } from '../PhoneMaskInput';\nimport { getContacts } from '../../redux/selectors';\nimport { editContact } from '../../redux/operations/contacts';\n\nimport { Button, TextField, Stack } from '@mui/material';\n\ntype Props = {\n  id: string;\n  name: string;\n  number: string;\n  onCloseModal: () => void;\n};\n\nexport function EdtiContactForm({ id, name, number, onCloseModal }: Props) {\n  const [editName, setName] = useState(name);\n  const [editNumber, setNumber] = useState(number);\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const verifyNewContact = (editName: string, editNumber: string) => {\n    const error = contacts.some(\n      ({ id: contactId, name, phone }) =>\n        contactId !== id &&\n        ((name as string).toLowerCase() === editName.toLowerCase() ||\n          editNumber === phone),\n    );\n\n    return !error;\n  };\n\n  const handleEditContact = (event: SyntheticEvent) => {\n    event.preventDefault();\n\n    if (verifyNewContact(editName, editNumber)) {\n      dispatch(editContact({ id, name: editName, phone: editNumber }));\n      setName('');\n      setNumber('');\n      onCloseModal();\n    }\n  };\n\n  return (\n    <form onSubmit={handleEditContact}>\n      <Stack spacing={1} p={2}>\n        <TextField\n          label=\"Name:\"\n          placeholder=\"Awesome name\"\n          value={editName}\n          onChange={e => setName(e.target.value)}\n          required\n        />\n        <TextField\n          label=\"Phone 1234567890\"\n          placeholder=\"Cool phone number\"\n          value={editNumber}\n          onChange={e => setNumber(e.target.value)}\n          InputProps={{\n            inputComponent: PhoneMaskInput as any,\n          }}\n          required\n        />\n        <Button variant=\"contained\" type=\"submit\">\n          Edit contact\n        </Button>\n      </Stack>\n    </form>\n  );\n}\n","import { useState } from 'react';\nimport { Box, Modal } from '@mui/material';\n\nimport { IconButton, styled } from '@mui/material';\nimport { Edit } from '@mui/icons-material';\n\nimport { EdtiContactForm } from '../EdtiContactForm';\n\ntype Props = {\n  id: string;\n  name: string;\n  number: string;\n};\n\nexport function EditModal({ id, name, number }: Props) {\n  const [open, setOpen] = useState(false);\n  // const [alert, setAlert] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  // const showAlert = () => {\n  //   setAlert(true);\n  //   setTimeout(() => setAlert(false), 2000);\n  // };\n\n  return (\n    <>\n      <IconButton data-testid=\"edit-button\" onClick={handleOpen}>\n        <Edit />\n      </IconButton>\n      <Modal open={open} onClose={handleClose}>\n        <ModalBox data-testid=\"edit-modal\">\n          <EdtiContactForm\n            onCloseModal={handleClose}\n            id={id}\n            name={name}\n            number={number}\n          />\n        </ModalBox>\n      </Modal>\n    </>\n  );\n}\n\nconst ModalBox = styled(Box)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 400px;\n  border-radius: 5px;\n  background-color: #fff;\n`;\n","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  Box,\n  Collapse,\n  Fade,\n  IconButton,\n  styled,\n  Stack,\n  Typography,\n} from '@mui/material';\nimport { Close, Delete } from '@mui/icons-material';\n\nimport { deleteContact } from '../../redux/operations/contacts';\n\nimport { EditModal } from '../EditModal';\n\ntype Props = {\n  id: string;\n  name: string;\n  phone: string;\n};\n\nexport function Contact({ id, name, phone }: Props) {\n  const [isConfirmDelete, setIsConfirmDelete] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const onDelete = () => {\n    dispatch(deleteContact(id));\n  };\n\n  useEffect(() => {\n    if (isConfirmDelete) {\n      setTimeout(() => {\n        setIsConfirmDelete(false);\n      }, 4000);\n    }\n  }, [isConfirmDelete]);\n\n  return (\n    <Wrapper>\n      <ContactBox direction=\"row\" spacing={1} data-testid=\"user-item\">\n        <Stack direction=\"row\" justifyContent=\"space-between\" width=\"100%\">\n          <Typography>{name}</Typography>\n          <Typography>{phone}</Typography>\n        </Stack>\n        <Stack direction=\"row\" alignItems=\"center\">\n          <EditModal id={id} name={name} number={phone} />\n          <DeleteBox>\n            <StyledFade in={!isConfirmDelete}>\n              <IconButton\n                data-testid=\"start-delete\"\n                onClick={() => setIsConfirmDelete(true)}\n              >\n                <Delete />\n              </IconButton>\n            </StyledFade>\n            <StyledFade in={isConfirmDelete}>\n              <IconButton\n                data-testid=\"cancel-delete\"\n                onClick={() => setIsConfirmDelete(false)}\n              >\n                <Close />\n              </IconButton>\n            </StyledFade>\n          </DeleteBox>\n\n          <Collapse in={isConfirmDelete} orientation=\"horizontal\">\n            <DeleteButton onClick={onDelete}>Delete</DeleteButton>\n          </Collapse>\n        </Stack>\n      </ContactBox>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled(Box)`\n  position: relative;\n`;\n\nconst ContactBox = styled(Stack)`\n  position: relative;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst DeleteButton = styled(Typography)`\n  padding-left: ${({ theme }) => theme.spacing(1)};\n  color: ${({ theme }) => theme.palette.error.light};\n  cursor: pointer;\n`;\n\nconst DeleteBox = styled(Box)`\n  position: relative;\n  width: 40px;\n  height: 40px;\n`;\n\nconst StyledFade = styled(Fade)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n`;\n","import { useSelector } from 'react-redux';\n\nimport { Box, Typography } from '@mui/material';\n\nimport { getFilteredContacts } from '../../redux/selectors';\n\nimport { Contact } from '../Contact';\n\nexport function ContactList() {\n  const contacts = useSelector(getFilteredContacts);\n\n  return (\n    <Box pt={1}>\n      <Typography variant=\"h5\">Contacts</Typography>\n\n      {contacts.map(({ id, name, phone }) => (\n        <Contact key={id} id={id} name={name} phone={phone} />\n      ))}\n    </Box>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport { TextField } from '@mui/material';\n\nimport { getFilter } from '../../redux/selectors';\nimport { changeFilter } from '../../redux/slices/filter';\n\nexport function Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <TextField\n      value={value}\n      onChange={e => dispatch(changeFilter(e.target.value))}\n      label=\"Filter\"\n    />\n  );\n}\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Box, Typography } from '@mui/material';\n\nimport { ContactForm } from '../components/ContactForm';\nimport { ContactList } from '../components/ContactList';\nimport { Filter } from '../components/Filter';\n\nimport { getContactsLength } from '../redux/selectors';\nimport { fetchContacts } from '../redux/operations/contacts';\n\nexport default function Contacts() {\n  const contactsLength = useSelector(getContactsLength);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box>\n      <Typography variant=\"h4\">Phonebook</Typography>\n      <ContactForm />\n      {contactsLength > 1 && (\n        <Box pt={1}>\n          <Filter />\n        </Box>\n      )}\n      <ContactList />\n    </Box>\n  );\n}\n"],"names":["React","props","ref","onChange","other","mask","definitions","inputRef","onAccept","value","target","name","overwrite","ContactForm","useState","setName","phone","setPhone","contacts","useSelector","getContacts","dispatch","useDispatch","onSubmit","event","preventDefault","newName","newNumber","verify","forEach","toLowerCase","verifyNewContact","createContact","Stack","spacing","TextField","label","placeholder","e","required","InputProps","inputComponent","PhoneMaskInput","Button","variant","type","EdtiContactForm","id","number","onCloseModal","editName","editNumber","setNumber","error","some","contactId","editContact","p","EditModal","open","setOpen","handleClose","IconButton","onClick","Edit","Modal","onClose","ModalBox","styled","Box","Contact","isConfirmDelete","setIsConfirmDelete","useEffect","setTimeout","Wrapper","ContactBox","direction","justifyContent","width","Typography","alignItems","DeleteBox","StyledFade","in","Delete","Close","Collapse","orientation","DeleteButton","deleteContact","theme","palette","light","Fade","ContactList","getFilteredContacts","pt","map","Filter","getFilter","changeFilter","Contacts","contactsLength","getContactsLength","fetchContacts"],"sourceRoot":""}