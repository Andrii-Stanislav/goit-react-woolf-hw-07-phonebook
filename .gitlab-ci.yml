# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

image: node:16

stages: # List of stages for jobs, and their order of execution
  - setup
  - testing
  - deployment

build-job: # This job runs in the build stage, which runs first.
  stage: setup
  cache:
    paths:
      - node_modules/
  script:
    - npm install
    - echo "Compile complete."

unit:testing:
  stage: testing
  cache:
    paths:
      - node_modules/
  only:
    changes:
      - src/**/*.{ts,tsx}
  script:
    - npm run test
    - echo "Test finished"

deploy-job: # This job runs in the deploy stage.
  stage: deployment
  only:
    - master
  cache:
    paths:
      - node_modules/
  script:
    - npm install -g firebase-tools
    - npm install -g bower
    - npm install
    - bower install --allow-root
    - firebase use --token $FIREBASE_DEPLOY_KEY production
    - firebase deploy -m "Pipeline $CI_PIPELINE_ID, build $CI_BUILD_ID"
      --non-interactive --token $FIREBASE_DEPLOY_KEY
    - echo "Application successfully deployed."
